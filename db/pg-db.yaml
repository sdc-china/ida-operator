apiVersion: v1
kind: Service
metadata:
  labels:
    app: "pg-db"
  name: "pg-db"
spec:
  ports:
  - name: "pg-db-port"
    port: 5432
    targetPort: 5432
  selector:
    app: "pg-db"
  type: ClusterIP

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: "pg-db-pvc"
  name: "pg-db-pvc"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: managed-nfs-storage
  resources:
    requests:
      storage: 5Gi

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: pg-db
  labels:
    app: pg-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-db
  template:
    metadata:
      labels:
        app: pg-db
    spec:
      volumes:
        - name: pg-db-pvc
          persistentVolumeClaim:
            claimName: pg-db-pvc
        - name: pg-db-configmap
          configMap:
            name: pg-db-configmap
      containers:
        - name: pg-db
          image: postgres:14.3
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: idaweb
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: password
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          resources: {}
          volumeMounts:
            - name: pg-db-pvc
              mountPath: /var/lib/postgresql/data
            - name: pg-db-configmap
              mountPath: /docker-entrypoint-initdb.d
      restartPolicy: Always
      imagePullSecrets:
        - name: docker-secret
